import Head from 'next/head'
import { Box, Button, ButtonGroup, Card, CardBody, CardFooter, Divider, Grid,Image, GridItem, Heading,  Stack, Text } from '@chakra-ui/react';
import Link from 'next/link'
import { StarIcon } from '@chakra-ui/icons'

export default function Home({users,projects}) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Grid
  templateAreas={`
                  "nav  main"
                  "nav footer"`}
  gridTemplateRows={'50px 1fr 30px'}
  gridTemplateColumns={'300px 1fr'}
  h='700px'
  gap='1'
  color='blackAlpha.700'
  fontWeight='bold'
  
>

  <GridItem pl='2'  area={'nav'} >

  <Card maxW='sm' alignItems="center" textAlign="center" ml="5" mt="5">
  <CardBody>
  <Box alignItems="center" textAlign="center" ml="20">
  <Image textAlign="center" borderRadius="50" src={users.avatar_url} alt="scsa" width={100} height={100}/>
</Box>
    <Stack mt='6' spacing='3'>
      <Heading size='md'>{users.name}</Heading>
      <Text fontWeight="thin">
        Full-stack Devoloper | JavaScript | ReactJS |HTML | CSS | CHAKRA_UI
      </Text>
    </Stack>
  </CardBody>
  <Divider />
  <CardFooter>
    <ButtonGroup spacing='2'>
      <Button variant='solid' colorScheme='green' borderRadius="20">
      <a style={{color:"black",textDecoration:"none"}} href='MoumitaDas.pdf' download="MoumitaDas.pdf">Resume</a>
      </Button>
      <Button variant='solid' colorScheme='blue' borderRadius="20">
      <a href='https://github.com/Moumita7'> Follow</a>       
      </Button>
    </ButtonGroup>
  </CardFooter>
</Card>

{/* second */}
<Card maxW='sm' alignItems="center" textAlign="center" ml="5" mt="5" p="2">
      <Grid  templateRows='repeat(2,1fr)' gridTemplateColumns='repeat(3,1fr)'  gap={1}>
      <Text  fontWeight="medium" color="green.400" bg="blue.100" w="20" h="6">
        REACT JS
      </Text>
      <Text  fontWeight="medium" color="green.400" bg="blue.100" w="20" h="6">
        CSS
      </Text>
      <Text  fontWeight="medium" color="green.400" bg="blue.100" w="20" h="6">
        HTML
      </Text>
      <Text  fontWeight="medium" color="green.400" bg="blue.100" w="20" h="6">
        JS
      </Text>
      <Text  fontWeight="medium" color="green.400" bg="blue.100" w="20" h="6">
        REDUX
      </Text>
      </Grid>
  <Divider />
 
</Card>

{/* thrid */}
<Card maxW='sm' alignItems="center" textAlign="center" ml="5" mt="5">
  <CardBody>
  <Box alignItems="center" textAlign="center" ml="20">
</Box>
    <Stack mt='6' spacing='3'>
      <Heading size='md'>Educaton</Heading>
      <Text fontWeight="thin">
       1.  Masai MERN STACK
      </Text>
      <Text fontWeight="thin">
       2.  MCA
      </Text>
      <Text fontWeight="thin">
       2.  BCA
      </Text>
    </Stack>
  </CardBody>
  <Divider />

</Card>
  </GridItem>
  <GridItem pl='2' area={'main'} m="5">
  <Box bgColor="#2D3748" p="6" color="white" borderRadius="10">
        <Heading textAlign="center" mb="5">Projects</Heading>
        <Box >
        <Grid gap="10" gridTemplateColumns='repeat(3,1fr)'>
        {projects.map((el)=>(
            <>   
            <Box border="1px solid black" borderRadius="5" textAlign="center" p="5" mb="2">     
             <Heading fontSize="2xl" mb="2" as="h2"><Link href={el.clone_url}>{el.name}</Link></Heading>
             <Heading fontSize="x"  mb="2" as="h4"><StarIcon mr="2"/>{el.stargazers_count}</Heading>
             <Heading fontSize="x" as="h4">Fork Count {el.forks_count}</Heading> 
             <Heading fontSize="x" as="h4">Language : {el.language}</Heading> 

            </Box>
            </>
          
        ))}
        </Grid>
    </Box>
    </Box>
  </GridItem>

</Grid>
     
    </>
  )
}

export async function getStaticProps(context) {
  let res1 =await fetch("https://api.github.com/users/moumita7")
  let res2 =await fetch("https://api.github.com/search/repositories?q=user:moumita7&per_page=10&type=Repositories")
  let user=await res1.json()
  let projects=await res2.json()

  return{
      props:{
          users:user,
          projects:projects.items
      }
  }
}
